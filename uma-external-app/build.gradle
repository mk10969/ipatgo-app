plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}


group 'org.uma.external'
version '1.0.0.RELEASE'


repositories {
    mavenCentral()
}


bootJar {
    launchScript()
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}


bootRun {
    jvmArgs = ['-Dspring.profiles.active=dev']
}


configurations {
    testImplementation.extendsFrom compileOnly
    testAnnotationProcessor.extendsFrom annotationProcessor
}


dependencies {
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // jacob
    implementation files('lib/jacob.jar')
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // http and websocket
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-integration'

    implementation 'com.google.guava:guava:28.1-jre'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
}


test {
    useJUnitPlatform()
}


task publish(type: Copy, dependsOn: build) {
    from("${buildDir}/libs") {
        include '*.jar'
    }
    into "${projectDir}/windows-service"
}


compileJava.options.encoding = 'UTF-8'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
